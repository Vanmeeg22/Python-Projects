import qrcode
from PIL import Image, ImageTk
import qrcode.constants
import tkinter as tk
from tkinter import filedialog, colorchooser

# Function to generate QR code
def generate_qr():
    # Clear previous QR code if any
    qr_label.config(image='')

    msg = entry.get()
    fill_color = fill_color_var.get()
    back_color = back_color_var.get()
    
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_H,
        box_size=10,
        border=4,
    )
    qr.add_data(msg)
    qr.make(fit=True)
    img = qr.make_image(fill_color=fill_color, back_color=back_color)

    # Convert PIL image to ImageTk format
    img_tk = ImageTk.PhotoImage(img)
    
    # Update label with QR code image
    qr_label.config(image=img_tk)
    qr_label.image = img_tk

    # Save the generated image for saving later
    qr_label.img_pil = img

# Function to save QR code
def save_qr():
    if hasattr(qr_label, 'img_pil'):
        file_path = filedialog.asksaveasfilename(defaultextension=".png",
                                                 filetypes=[("PNG files", "*.png"),
                                                            ("All files", "*.*")])
        if file_path:
            qr_label.img_pil.save(file_path)

# Function to choose fill color
def choose_fill_color():
    color_code = colorchooser.askcolor(title="Choose fill color")[1]
    if color_code:
        fill_color_var.set(color_code)

# Function to choose background color
def choose_back_color():
    color_code = colorchooser.askcolor(title="Choose background color")[1]
    if color_code:
        back_color_var.set(color_code)

# Set up the main application window
root = tk.Tk()
root.title("QR Code Generator")

# Create a frame for the input and buttons
frame = tk.Frame(root)
frame.pack(pady=20)

# Create and pack the widgets
entry_label = tk.Label(frame, text="Enter your message:")
entry_label.grid(row=0, column=0, padx=5)

entry = tk.Entry(frame, width=40)
entry.grid(row=0, column=1, padx=5)

fill_color_label = tk.Label(frame, text="QR Color:")
fill_color_label.grid(row=1, column=0, padx=5)

fill_color_var = tk.StringVar(value="red")
fill_color_button = tk.Button(frame, text="Choose Color", command=choose_fill_color)
fill_color_button.grid(row=1, column=1, padx=5)

back_color_label = tk.Label(frame, text="Background Color:")
back_color_label.grid(row=2, column=0, padx=5)

back_color_var = tk.StringVar(value="black")
back_color_button = tk.Button(frame, text="Choose Color", command=choose_back_color)
back_color_button.grid(row=2, column=1, padx=5)

generate_button = tk.Button(frame, text="Generate QR Code", command=generate_qr)
generate_button.grid(row=3, column=0, columnspan=2, pady=10)

save_button = tk.Button(frame, text="Save QR Code", command=save_qr)
save_button.grid(row=4, column=0, columnspan=2, pady=10)

# Label to display the QR code
qr_label = tk.Label(root)
qr_label.pack(pady=20)

# Start the Tkinter event loop
root.mainloop()